package ma.bookinwidget.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class AvailabilityAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAvailabilityAllPropertiesEquals(Availability expected, Availability actual) {
        assertAvailabilityAutoGeneratedPropertiesEquals(expected, actual);
        assertAvailabilityAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAvailabilityAllUpdatablePropertiesEquals(Availability expected, Availability actual) {
        assertAvailabilityUpdatableFieldsEquals(expected, actual);
        assertAvailabilityUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAvailabilityAutoGeneratedPropertiesEquals(Availability expected, Availability actual) {
        assertThat(expected)
            .as("Verify Availability auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAvailabilityUpdatableFieldsEquals(Availability expected, Availability actual) {
        assertThat(expected)
            .as("Verify Availability relevant properties")
            .satisfies(e -> assertThat(e.getStartDate()).as("check startDate").isEqualTo(actual.getStartDate()))
            .satisfies(e -> assertThat(e.getEndDate()).as("check endDate").isEqualTo(actual.getEndDate()))
            .satisfies(e -> assertThat(e.getLanguage()).as("check language").isEqualTo(actual.getLanguage()))
            .satisfies(e -> assertThat(e.getCountry()).as("check country").isEqualTo(actual.getCountry()))
            .satisfies(e -> assertThat(e.getAdultNumber()).as("check adultNumber").isEqualTo(actual.getAdultNumber()))
            .satisfies(e -> assertThat(e.getChildNumber()).as("check childNumber").isEqualTo(actual.getChildNumber()))
            .satisfies(e -> assertThat(e.getFlexibilityOnDays()).as("check flexibilityOnDays").isEqualTo(actual.getFlexibilityOnDays()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAvailabilityUpdatableRelationshipsEquals(Availability expected, Availability actual) {
        // empty method
    }
}
